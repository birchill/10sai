.token-list {
  @include textbox-styles;
  cursor: text;

  // Textboxes have uneven vertical and horizonal padding so we make the
  // vertical padding equal here.
  padding-top: .4em;

  // We drop the 0.4em from the padding-bottom and put it on the chip and text's
  // margin-bottom instead so that there is a gap between chips when the
  // control wraps
  padding-bottom: 0;

  // Text boxes have a fixed height but we want to stretch to fit in the
  // suggestions as needed.
  height: auto;

  --text-color: #{$text-color};
  --chip-fgcolor: #{$highlight};
  --chip-bgcolor: #{lighten($highlight, 50%)};
  --suggestion-label-color: #{$standard-grey};
  --suggestion-fgcolor: #{$highlight};
  --suggestion-bgcolor: #{lighten($highlight, 50%)};
  --mark-bgcolor: yellow;
  --mark-fgcolor: #{$text-color};
  --loading-fgcolor: #{$standard-grey};
  --loading-bgcolor: #{$really-light-grey};
  --indicator-color: #{$light-grey};

  display: flex;
  align-content: flex-start;
  flex-wrap: wrap;

  // Replace textbox-styles' height: 3rem with an equivalent min-height since
  // we expect this to wrap.
  box-sizing: border-box;

  > .chip {
    display: inline-flex;
    align-items: center;

    box-sizing: border-box;
    // The whole control should be 3rem high, but we drop 0.4em spacing from
    // either side (.4em padding-top on the token-list, and .4em margin-bottom
    // on the chip).
    //
    // We use a min-height, however, so that the chip can wrap if it has really
    // long text.
    min-height: calc(3rem - (0.4em * 2));
    margin: 0 .5em .4em 0;

    // We move most of the padding to the label/button so it's easier to click
    // the clear button.
    padding-left: .4em;

    vertical-align: middle;
    cursor: pointer;

    border: $border-width solid var(--chip-fgcolor);
    border-radius: .3em;
    color: var(--chip-fgcolor);

    background: var(--chip-bgcolor);

    &:hover, &:focus-within {
      filter: brightness(1.03);
    }

    &:focus-within {
      border-style: dashed;
    }

    // Arrange the padding so that the .clear button gets as much of it as
    // possible (and hence is a bigger hit target).
    > .label, > .clear {
      padding-top: .2em;
      padding-bottom: .2em;
    }

    > .label {
      padding-right: 0;
    }

    > .clear {
      padding-left: .4em;
      padding-right: .4em;
    }

    > .clear {
      color: var(--chip-fgcolor);
      background: none;
      border: 0;

      // Drop filter so we don't get double highlight
      &:hover {
        filter: none;
      }
    }

    &.-linked > .label {
      text-decoration: underline dotted;
    }
    &.-linked::before {
      content: "";
      display: inline-block;
      position: relative;

      width: 1em;
      height: 1em;

      background-image: url('img/icons.svg');
      background-position-y: -3em;
      background-position-x: -20em;
      background-size: $icon-columns+em $icon-rows+em;
      background-repeat: no-repeat;

      margin-right: 0.2em;
    }
  }

  > .textentry, > .textentry:focus {
    flex: 1;
    min-width: 80px;
    outline: none;

    border: none;
    box-shadow: none;
    // See description of the calculation of .chip's height
    height: calc(3rem - (0.4em * 2));
    padding: 0;

    // See above
    margin-bottom: .4em;

    color: var(--text-color);
  }

  > .suggestions {
    display: flex;
    align-items: center;
    // See description of the calculation of .chip's height
    min-height: calc(3rem - (0.4em * 2));

    > .label {
      display: inline-block;

      margin: 0 .4em .4em 0;
      padding: .2em 0;
      vertical-align: middle;

      font-style: italic;
      color: var(--suggestion-label-color);
    }

    > .suggestion-list {
      display: inline;
      list-style: none;
      margin: 0;
      padding: 0;

      > .item {
        display: inline-block;
        margin: 0 .4em .4em 0;

        // This is cheating a little but we push the padding into the child link
        // since it makes the hit region larger.
        > a {
          color: var(--suggestion-fgcolor);
          display: inline-block;
          padding: .2em .4em;

          // We add a min-width too so that single kanji suggestions are easier
          // to select
          min-width: 2em;
          text-align: center;
        }

        vertical-align: middle;

        border: $border-width dashed transparent;
        border-radius: .3em;

        background-color: var(--suggestion-bgcolor);
        // Make these a bit more feint so it's clear they're not locked-in yet
        opacity: 0.7;

        &:hover, &:focus-within {
          filter: brightness(1.03);
          opacity: 1;
        }

        &:focus-within {
          border-color: var(--suggestion-fgcolor);
          & a {
            outline: none;
          }
        }

        mark {
          // We want all events to go to the parent <a> instead to simplify
          // event handling.
          pointer-events: none;
          background: var(--mark-bgcolor);
          color: var(--mark-fgcolor);
        }
      }
    }

    > .loading-indicator {
      display: inline-block;
      width: 50px;
      // See above
      min-height: calc(3rem - (0.4em * 2));
      box-sizing: border-box;
      vertical-align: top;
    }

    &.-loading {
      > .suggestion-list > .item {
        background-color: var(--loading-bgcolor);
        > a {
          color: var(--loading-fgcolor);
        }
        &:hover, &:focus-within {
          filter: none;
          opacity: 0.7;
        }
      }
    }
  }

  // A variation that does not include borders so it can be incorporated in
  // other components.
  &.-seamless {
    border: none;
    background: transparent;
    box-shadow: none;
  }

  &.-yellow {
    --text-color: #{$keyword-yellow-dark};
    --chip-fgcolor: #{$keyword-yellow-dark};
    --chip-bgcolor: #{lighten($keyword-yellow, 5%)};
    --suggestion-label-color: #{$keyword-yellow-dark};
    --suggestion-fgcolor: #{$keyword-yellow-dark};
    --suggestion-bgcolor: #{lighten($keyword-yellow, 10%)}; // white, but, oh well
    --mark-bgcolor: white;
    --mark-fgcolor: #{$text-color};
    --loading-fgcolor: #{desaturate($keyword-yellow-dark, 80%)};
    --loading-bgcolor: rgba(255, 255, 255, 0.7);
    --indicator-color: #{$keyword-yellow-dark};

    background-color: $keyword-yellow;
    border-color: $keyword-yellow-dark;

    > .textentry {
      background-color: $keyword-yellow;
      &::placeholder {
        color: $keyword-yellow-dark;
      }
    }

    > .chip {
      &:hover, &:focus-within {
        // The brightness we use for the normal style washes this out
        filter: brightness(1.06);
      }
      &.-linked::before {
        background-position-y: -5em;
      }
    }

    > .suggestions {
      > .suggestion-list > .item {
        opacity: 0.84;
        &:hover, &:focus-within {
          // Again, the brightness we use for the normal style washes this out
          filter: brightness(1.06);
        }
      }
    }
  }
}
