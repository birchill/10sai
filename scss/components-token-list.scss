.token-list {
  @include textbox-styles;

  // Textboxes have uneven vertical and horizonal padding so we make the
  // vertical padding equal here.
  padding-top: .6em;
  // For the bottom, however, we incorporate it in the suggestions part.
  padding-bottom: 0;

  // Text boxes have a fixed height but we want to stretch to fit in the
  // suggestions as needed.
  height: auto;

  > .input {
    display: flex;
    align-content: flex-start;
    flex-wrap: wrap;

    // Replace textbox-styles' height: 3rem with an equivalent min-height since
    // we expect this to wrap.
    box-sizing: border-box;

    // We drop 0.4em from the padding-bottom and put it on the chip and text's
    // margin-bottom instead so that there is a gap between chips when the
    // control wraps
    padding-bottom: 0.6em - 0.4em;

    > .chip {
      display: inline-flex;
      align-items: center;

      box-sizing: border-box;
      // 0.4em is the vertical padding of the text box
      height: calc(3rem - (0.4em * 2));
      margin: 0 .5em .4em 0;
      padding: .2em 0 .2em .4em;

      vertical-align: middle;
      cursor: default;

      border: $border-width solid $highlight;
      border-radius: .3em;
      color: $highlight;

      background: lighten($highlight, 50%);

      &:hover, &:focus-within {
        filter: brightness(1.2);
      }

      &:focus-within {
        border-style: dashed;
      }

      > .clear {
        background: none;
        border: 0;
        padding: .3em .4em;

        // Drop filter so we don't get double highlight
        &:hover {
          filter: none;
        }
      }
    }

    > .textentry, > .textentry:focus {
      flex: 1;
      outline: none;

      border: none;
      box-shadow: none;
      // 0.4em is the vertical padding of the text box
      height: calc(3rem - (0.4em * 2));
      padding: 0;

      // See above
      margin-bottom: .4rem;
    }
  }

  > .suggestions {
    padding-bottom: .6em - .4em;

    > .label {
      display: inline-block;

      margin: 0 .4em .4em 0;
      padding: .2em 0;
      vertical-align: middle;

      font-style: italic;
      opacity: 0.6;
    }

    > .suggestion-list {
      display: inline;
      list-style: none;
      margin: 0;
      padding: 0;

      > .item {
        display: inline-block;

        margin: 0 .4em .4em 0;

        // This is cheating a little but we push the padding into the child link
        // since it makes the hit region larger.
        > a {
          display: inline-block;
          padding: .2em .4em;

          // We add a min-width too so that single kanji suggestions are easier
          // to select
          min-width: 2em;
          text-align: center;
        }

        vertical-align: middle;

        border: $border-width dashed transparent;
        border-radius: .3em;
        color: $highlight;

        background: lighten($highlight, 50%);
        // Make these a bit more feint so it's clear they're not locked-in yet
        opacity: 0.6;

        &:hover, &:focus-within {
          filter: brightness(1.2);
          opacity: 1;
        }

        &:focus-within {
          border-color: $highlight;
          & a {
            outline: none;
          }
        }
      }
    }
  }

  // A variation that does not include borders so it can be incorporated in
  // other components.
  &.-seamless {
    border: none;
    background: transparent;
    box-shadow: none;
  }

  &.-yellow {
    background-color: $keyword-yellow;

    > .input {
      > .textentry {
        background-color: $keyword-yellow;
        color: $keyword-yellow-dark;
      }

      > .chip {
        border-color: $keyword-yellow-dark;
        color: $keyword-yellow-dark;
        background-color: lighten($keyword-yellow, 5%);

        > .clear {
          color: $keyword-yellow-dark;
        }

        &:hover, &:focus-within {
          // The brightness we use for the normal style washes this out
          filter: brightness(1.06);
        }
      }
    }

    > .suggestions {
      background: $keyword-yellow;

      > .label {
        color: $keyword-yellow-dark;
      }

      > .suggestion-list > .item {
        color: $keyword-yellow;
        background-color: lighten($keyword-yellow, 5%);

        &:hover, &:focus-within {
          filter: brightness(1.06);
        }

        &:focus-within {
          border-color: $keyword-yellow-dark;
        }

        > a {
          color: $keyword-yellow-dark;
        }
        mark {
          background: white;
        }
      }
    }
  }
}
