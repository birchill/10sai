.token-list {
  @include textbox-styles;

  // Textboxes have uneven vertical and horizonal padding so we make the
  // vertical padding equal here.
  padding-top: .6em;
  // For the bottom, however, we incorporate it in the suggestions part.
  padding-bottom: 0;

  // Text boxes have a fixed height but we want to stretch to fit in the
  // suggestions as needed.
  height: auto;

  --text-color: $text-color;
  --chip-fgcolor: $highlight;
  --chip-bgcolor: lighten($highlight, 50%);
  --suggestion-label-color: $standard-grey;
  --suggestion-fgcolor: $highlight;
  --suggestion-bgcolor: lighten($highlight, 50%);
  --mark-bgcolor: yellow;
  --mark-fgcolor: $text-color;
  --loading-fgcolor: $standard-grey;
  --loading-bgcolor: $really-light-grey;
  --indicator-color: $light-grey;

  > .input {
    display: flex;
    align-content: flex-start;
    flex-wrap: wrap;

    // Replace textbox-styles' height: 3rem with an equivalent min-height since
    // we expect this to wrap.
    box-sizing: border-box;

    // We drop 0.4em from the padding-bottom and put it on the chip and text's
    // margin-bottom instead so that there is a gap between chips when the
    // control wraps
    padding-bottom: 0.6em - 0.4em;

    > .chip {
      display: inline-flex;
      align-items: center;

      box-sizing: border-box;
      // 0.4em is the vertical padding of the text box
      height: calc(3rem - (0.4em * 2));
      margin: 0 .5em .4em 0;
      padding: .2em 0 .2em .4em;

      vertical-align: middle;
      cursor: default;

      border: $border-width solid var(--chip-fgcolor);
      border-radius: .3em;
      color: var(--chip-fgcolor);

      background: var(--chip-bgcolor);

      &:hover, &:focus-within {
        filter: brightness(1.2);
      }

      &:focus-within {
        border-style: dashed;
      }

      > .clear {
        color: var(--chip-fgcolor);
        background: none;
        border: 0;
        padding: .3em .4em;

        // Drop filter so we don't get double highlight
        &:hover {
          filter: none;
        }
      }
    }

    > .textentry, > .textentry:focus {
      flex: 1;
      outline: none;

      border: none;
      box-shadow: none;
      // 0.4em is the vertical padding of the text box
      height: calc(3rem - (0.4em * 2));
      padding: 0;

      // See above
      margin-bottom: .4rem;

      color: var(--text-color);
    }
  }

  > .suggestions {
    padding-bottom: .6em - .4em;

    > .label {
      display: inline-block;

      margin: 0 .4em .4em 0;
      padding: .2em 0;
      vertical-align: middle;

      font-style: italic;
      color: var(--suggestion-label-color);
    }

    > .suggestion-list {
      display: inline;
      list-style: none;
      margin: 0;
      padding: 0;

      > .item {
        display: inline-block;
        margin: 0 .4em .4em 0;

        // This is cheating a little but we push the padding into the child link
        // since it makes the hit region larger.
        > a {
          color: var(--suggestion-fgcolor);
          display: inline-block;
          padding: .2em .4em;

          // We add a min-width too so that single kanji suggestions are easier
          // to select
          min-width: 2em;
          text-align: center;
        }

        vertical-align: middle;

        border: $border-width dashed transparent;
        border-radius: .3em;

        background-color: var(--suggestion-bgcolor);
        // Make these a bit more feint so it's clear they're not locked-in yet
        opacity: 0.7;

        &:hover, &:focus-within {
          filter: brightness(1.2);
          opacity: 1;
        }

        &:focus-within {
          border-color: var(--suggestion-fgcolor);
          & a {
            outline: none;
          }
        }

        mark {
          background: var(--mark-bgcolor);
          color: var(--mark-fgcolor);
        }
      }
    }

    > .loading-indicator {
      display: inline-block;
      width: 50px;
    }

    &.-loading {
      > .suggestion-list > .item {
        background-color: var(--loading-bgcolor);
        > a {
          color: var(--loading-fgcolor);
        }
        &:hover, &:focus-within {
          filter: none;
          opacity: 0.7;
        }
      }
    }
  }

  // A variation that does not include borders so it can be incorporated in
  // other components.
  &.-seamless {
    border: none;
    background: transparent;
    box-shadow: none;
  }

  &.-yellow {
    --text-color: $keyword-yellow-dark;
    --chip-fgcolor: $keyword-yellow-dark;
    --chip-bgcolor: lighten($keyword-yellow, 5%);
    --suggestion-label-color: $keyword-yellow-dark;
    --suggestion-fgcolor: $keyword-yellow-dark;
    --suggestion-bgcolor: lighten($keyword-yellow, 5%);
    --mark-bgcolor: white;
    --mark-fgcolor: $text-color;
    --loading-fgcolor: desaturate($keyword-yellow-dark, 80%);
    --loading-bgcolor: rgba(255, 255, 255, 0.7);
    --indicator-color: $keyword-yellow-dark;

    background-color: $keyword-yellow;
    border-color: $keyword-yellow-dark;

    > .input {
      > .textentry {
        background-color: $keyword-yellow;
        &::placeholder {
          color: $keyword-yellow-dark;
          opacity: 0.8;
        }
      }

      > .chip {
        &:hover, &:focus-within {
          // The brightness we use for the normal style washes this out
          filter: brightness(1.06);
        }
      }
    }

    > .suggestions {
      > .suggestion-list > .item {
        &:hover, &:focus-within {
          // Again, the brightness we use for the normal style washes this out
          filter: brightness(1.06);
        }
      }
    }
  }
}
