$highlight: #2690BA;
$hover-highlight: lighten(#2690BA, 15%);

/*
 * Font settings
 */

body, html {
  font-family: Arial, sans-serif;
  -webkit-text-size-adjust: 100%;
  box-sizing: border-box;
  font-size: 15px;
  line-height: 1.42857143;
  color: #333;
}

/*
 * Screen layout
 *
 * Based on prototype here: http://codepen.io/anon/pen/EKGjGG
 */

body, html {
  padding: 0;
  margin: 0;
  height: 100%;
  overflow: hidden;
}
#container {
  height: 100%;
}
#container > div {
  display: flex;
  height: 100%;
  flex-direction: column;
}
main {
  position: relative;
  flex: 1;
}
main section {
  margin-top: 10px;
}
main section {
  height: 100%;
  width: 100%;
  position: absolute;
  overflow: auto;
}

/*
 * Popup background
 */

main section, main div.popup-overlay {
  height: 100%;
  width: 100%;
  position: absolute;
}
main div.popup-overlay {
  background: rgb(220, 220, 220);
  transition: opacity 0.15s;
  opacity: 0;
  will-change: opacity;
  pointer-events: none;
}
main div.popup-overlay.active {
  opacity: 0.8;
  pointer-events: all;
}

/*
 * Header
 */

header {
  height: 39px;
  margin: 0;
  background: white;
  box-shadow: 0 1.5px 3px rgba(0,0,0,0.25);
  display: flex;
}
header > * {
  display: inline-block;
  margin-top: 0;
  margin-bottom: 0;
}
header hgroup { /* App name and subject heading stretch to fill */
  flex: 1 1 auto;
  padding-top: 2px;
  padding-left: 10px;
  /*
   * I would love to make h2 use text-overflow: ellipsis but after about 1hr
   * of trying every combination of flexbox under the sun I couldn't get the h2
   * to be independently resizeable so that it would work.
   */
  overflow: hidden;
}
header hgroup > * {
  display: inline-block;
  margin: 0;
}
header h1 { /* App name */
  font-size: 2rem;
  padding-right: 5px;
}
header h2 { /* Subject name */
  font-size: 1.2rem;
  font-weight: normal;
  color: grey;
}

/*
 * Toolbar icons
 */

header .icon {
  width: 25px;
  height: 25px;
  padding: 7px 12px;
}
/* We put the icon itself in a pseudo-element so we can change the
 * background-color independently */
.icon::before {
  content: "";
  display: inline-block;
  width: 100%;
  height: 100%;
}

#sync-status::before {
  /* Sync icon is initially hidden until we detect a remote server is set */
  /* visibility: hidden; */
  content: "";
  background: url('img/icons.svg') left / auto 100% content-box;
}
#sync-status.error {
}
#sync-status.updating::before {
  animation: rotate 1s linear infinite;
}
@keyframes rotate {
  from { transform: rotate(0deg); }
  to   { transform: rotate(-360deg); }
}
#sync-status.offline {
}
#settings-menu.active {
  background: $highlight;
}
#settings-menu:hover {
  background: $hover-highlight;
}
#settings-menu::before {
  background: url('img/icons.svg') -600% / auto 100% content-box;
}

/*
 * Section pages
 */

body {
  background: #f2f2f2;
}
main section {
  box-sizing: border-box;
  padding: 10px;
  background: #f2f2f2;
}
main section {
  transition: all 0.2s;
}

/*
 * Popups
 */

main section.popup {
  background: white;
  margin-left: 5%;
  margin-right: 5%;
  width: 90%;
  height: auto;
  padding: 15px;
  box-shadow: 0 0 6px grey;
}
main section.popup[aria-hidden=true] {
  transform: translate(0%, -120%);
  transform: translate(0%, calc(-100% - 80px));
  transition: transform 0.15s ease-in;
  will-change: transform;
}
main section.popup {
  transform: translate(0%);
  transition-timing-function: ease;
}

main section h3 {
  margin-top: 0;
  font-size: 1.3rem;
}

/*
 * Summary panel
 *
 * Based on the empty component in spectre.css
 */

.summary-panel {
  background: #f8f8f8;
  border-radius: .3rem;
  padding: 4rem;
  text-align: center;
}
.summary-panel h4 {
  font-size: 1.2rem;
  margin: 0.5rem 0;
}
.summary-panel p,
.summary-panel ul {
  color: #888;
}
.summary-panel .action,
.summary-panel h4 + form {
  margin-top: 1.5rem;
}
.summary-panel p + ul {
  margin-top: -0.5em;
}
.summary-panel ul {
  text-align: left;
  display: inline-block;
}
.summary-panel .icon {
  display: block;
  margin-left: auto;
  margin-right: auto;
  height: 5rem;
  width: 5rem;
}

/*
 * Forms
 */

input, button {
  -webkit-appearance: none;
  border-radius: .3rem;
  box-sizing: border-box;
  font-size: 1.2rem;
  height: 2.5rem;
  padding: .3rem .7rem;
  outline: 0;
  vertical-align: top;
  margin: 0 0.2rem;
}
input[type=button], input[type=submit], button {
  background: transparent;
  border: .1rem solid $highlight;
  color: $highlight;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  &:hover {
    color: $hover-highlight;
    border-color: $hover-highlight;
  }
}
input[type=button].primary,
input[type=submit].primary,
button.primary {
  background: $highlight;
  color: white;
  &:hover {
    background: $hover-highlight;
  }
}

input[type=button].link {
  color: $highlight;
  border-width: 0px;
  padding-left:  0.3rem;
  padding-right: 0.3rem;
}

input[type=text] {
  -webkit-appearance: none;
  background: #fff;
  background-image: none;
  border: .1rem solid #c5c5c5;
  color: #333;
}
input[type=text]:focus {
  border-color: $highlight;
}

.input-group {
  display: inline-block;
}
.input-group .form-input:first-child:not(:last-child),
.input-group .input-group-btn:first-child:not(:last-child) {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  border-right: none;
}
.input-group .form-input:not(:first-child):not(:last-child),
.input-group .input-group-btn:not(:first-child):not(:last-child) {
  border-radius: 0;
  margin-left: -.2rem;
}
.input-group .form-input:last-child:not(:first-child),
.input-group .input-group-btn:last-child:not(:first-child) {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  margin-left: -.2rem;
}

/*
 * Error panel
 */
.error-panel {
  margin: 0rem 0.5rem;
  padding-bottom: 1rem;
  display: table;
  margin-left: auto;
  margin-right: auto;
}
.error-details {
  margin-bottom: 1.2rem;
  margin-left: 1rem;
  margin-right: 1rem;
}

/*
 * Cancelable text box
 */
.cancelable-textbox-group {
  display: inline-block;
}
.cancelable-textbox-cancel {
  width: 2em;
  margin: 0;
  margin-left: -2em;
  border: 0;
  transition: transform 0.3s;
}
.cancelable-textbox-cancel[aria-hidden=true] {
  transform: scale(0);
}
.cancelable-textbox-cancel span {
  position: absolute;
  left: -10000px;
}
.cancelable-textbox-cancel::after {
  color: lightgrey;
  content: "X";
  font-weight: bold;
}
.cancelable-textbox-cancel:hover::after {
  color: grey;
}

/*
 * Sync settings panel
 */
.sync-settings .sync-icon {
  background: url('img/icons.svg') -800% / auto 100% content-box;
}
.sync-settings.in-progress .sync-icon {
  animation: rotate 1s linear infinite;
}
.sync-settings.paused .sync-icon {
  background-position-x: -900%;
}
.sync-settings.offline .sync-icon {
  background-position-x: -1000%;
}
.sync-settings.error .sync-icon {
  background-position-x: -1100%;
}
.sync-settings.not-configured .sync-icon {
  background-position-x: -700%;
}
