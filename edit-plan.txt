EditCardForm
- On edit post EDIT_CARD with changed fields
- Don't update state directly (get them from props)
- On blur / timeout, if state is dirty, dispatch

reducer/edit
NEW_CARD -> clears edit card fields, sets formId to some random number
LOAD_CARD -> update formId (to requested card ID), set state, update card info
FINISH_LOAD_CARD -> update card info (only if form ID matches)
FAIL_LOAD_CARD -> update error field, NOT_FOUND
EDIT_CARD -> update card (changed field only), set dirty fields, state to dirty
SAVE_CARD -> (nothing to do here?)
FINISH_SAVE_CARD -> update edit card ID and change state from new_dirty -> ok etc.
  (but only if formIds match)
  update formId
  What if an edit happens in the mean time??? Need to cancel the save task so that it doesn't trigger finish save?
  Need to integration test this case
  Alternatively, just pass the saved card as part of the FINISH_SAVE and compare which fields have changed and drop those that haven't from the dirtyFields -- if dirtyFields is empty update the state 
FAIL_SAVE_CARD -> update error field (only if formIds match)
SYNC_CARD -> update fields that are not dirty

sagas/card
SAVE_CARD -> Actually trigger save
             update URL on success -- either INSERT_HISTORY or replace history depending on if the form IDs match
             dispatch FINISH/FAIL_SAVE_CARD
             Need to fork() this bit
NEW_CARD -> does save if there are dirty fields
            cancel previous save saga
NAVIGATE -> dispatch NEW_CARD as needed